{
    "template": {
        "prefix": "template",
        "body": [
            "#include <bits/stdc++.h>\n",
            "using namespace std;\n",
            "typedef long long ll;\n",
            "template<typename T>",
            "void printvector(vector<T>& v) {",
            "\tfor (int i = 0; i < v.size(); i++) {",
            "\t\tcout << v[i] << \" \\n\"[i == v.size()-1];\n\t}",
            "}\n",
            "template <typename T>",
            "void print2d(vector<vector<T> >&v) {",
            "\tfor (int i = 0; i < v.size(); i++) {",
            "\t\tprintvector(v[i]);\n\t}",
            "}\n",
            "template <typename T>",
            "void printarray(T arr[], T n) {",
            "\tfor (int i = 0; i < n; i++) {",
            "\t\tcout << arr[i] << \" \\n\"[i == n-1];\n\t}",
            "}\n",
            "// const ll mod = 1000000007;",
            "// const ll mod = 998244353;",
            "ll n, m, k, q, l, r, x, y, z;",
            "const ll template_array_size = 1e6 + 101;",
            "ll a[template_array_size], b[template_array_size], c[template_array_size];",
            "string s, t;",
            "ll ans = 0;\n",
            "void solve() {",
            "\t$1\n}\n",
            "int main() {",
            "\tios_base::sync_with_stdio(false);",
            "\tcin.tie(NULL);",
            "\tint t;",
            "\tcin >> t;",
            "\twhile(t--) {",
            "\t\tsolve();",
            "\t}",
            "\treturn 0;",
            "}\n"
        ]
    }
}
