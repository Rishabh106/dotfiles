# focus window
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# swap managed window
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# move managed window
shift + alt + ctrl - h : yabai -m window --warp west
shift + alt + ctrl - j : yabai -m window --warp south
shift + alt + ctrl - k : yabai -m window --warp north
shift + alt + ctrl - l : yabai -m window --warp east

# rotate tree (anti-clockwise rotation)
alt - r : yabai -m space --rotate 90

# toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen; \
          sketchybar --trigger window_focus

# toggle padding and gap
alt - g : yabai -m space --toggle padding; \
          yabai -m space --toggle gap

# float / unfloat window and center on screen
alt - t : yabai -m window --toggle float; \
          yabai -m window --grid 6:6:1:1:4:4; \
          sketchybar --trigger window_focus

# toggle window split type
alt - e : yabai -m window --toggle split

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# move window and focus desktop
shift + lalt - 1 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; \
                  yabai -m window --space $((1+4*($DISPLAY - 1))); \
                  sketchybar --trigger windows_on_spaces

shift + lalt - 2 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; \
                  yabai -m window --space $((2+4*($DISPLAY - 1))); \
                  sketchybar --trigger windows_on_spaces

shift + lalt - 3 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; \
                  yabai -m window --space $((3+4*($DISPLAY - 1))); \
                  sketchybar --trigger windows_on_spaces

shift + lalt - 4 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; \
                  yabai -m window --space $((4+4*($DISPLAY - 1))); \
                  sketchybar --trigger windows_on_spaces

# focus spaces
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5

# create/destroy spaces
shift + alt - n : yabai -m space --create
shift + alt - d : yabai -m space --destroy

# increase window size in w/a/s/d directions
alt - w : yabai -m window --resize top:0:-20
alt - d : yabai -m window --resize right:20:0
alt - s : yabai -m window --resize bottom:0:20
alt - a : yabai -m window --resize left:-20:0

# float window
lalt - space : yabai -m window --toggle float; \
               sketchybar --trigger window_focus

# Focus window up/down in stack
ctrl + alt - j : yabai -m window --focus stack.next || yabai -m window --focus stack.first
ctrl + alt - k : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

# Add the active window  to the window or stack to the {direction}
# Note that this only works when the active window does NOT already belong to a stack
cmd + ctrl - h  : yabai -m window west --stack $(yabai -m query --windows --window | jq -r '.id'); \
                  sketchybar --trigger window_focus
cmd + ctrl - j  : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id'); \
                  sketchybar --trigger window_focus
cmd + ctrl - k  : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id'); \
                  sketchybar --trigger window_focus
cmd + ctrl - l  : yabai -m window east --stack $(yabai -m query --windows --window | jq -r '.id'); \
                  sketchybar --trigger window_focus

# mpd
alt - i : mpc toggle &> /dev/null

# bluetooth toggle
alt - 0 : (blueutil -p | grep 1 && blueutil -p 0 || blueutil -p 1) &> /dev/null

# new window of app in current desktop
cmd - return : open -n -a kitty
ctrl - return : open -n -a Firefox

# app launcher
cmd - space : ~/.config/scripts/popup.sh ~/.config/scripts/launcher.sh
